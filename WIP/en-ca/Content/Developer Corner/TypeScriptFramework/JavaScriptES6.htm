<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-ca" xml:lang="en-ca" class="_Skins_HTML5___Top_Navigation_Coronado" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Developers corner|TypeScript Framework">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>JavaScript ES6</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.select-language-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/select-language.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.previous-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.remove-highlight-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/highlight.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../Resources/TableStyles/PatternedRows.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/sanitize-html.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../A_Welcome pages/StartHere.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search our help and documentation" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="search-container">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="row collapse">
                                        <div class="top-bar">
                                            <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                <div class="button-group-container-left">
                                                    <button class="button needs-pie select-language-button" title="Change language">
                                                        <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="select language" />
                                                    </button>
                                                    <button class="button needs-pie print-button" title="Print">
                                                        <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                    </button>
                                                    <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                        <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                    </button>
                                                    <button class="button needs-pie next-topic-button" title="Navigate next">
                                                        <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                    </button>
                                                    <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                                        <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="remove highlight" />
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="nocontent">
                                                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                </div>
                                            </div> </div>
                                        <div class="topic-layout">
                                            <div>
                                                <div class="side-menu">
                                                    <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/Release_2_TOC.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                    </ul>
                                                </div>
                                                <div class="side-content">
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead dropDownHeadside-content"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Search Tips</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>Search is based on keyword.</p>
                                                            <p><samp>Ex:&#160;"Procedures"</samp>
                                                            </p>
                                                            <p>Do not search with natural language</p>
                                                            <p><samp>Ex:&#160;"How do I write a new procedure?"</samp>
                                                            </p>
                                                        </div>
                                                    </div>
                                                </div><a class="cta" href="https://technet.microsoft.com/en-us/library/mt812330.aspx"><div class="cta center"><p>Dynamics 365 Help
									</p></div></a>
                                            </div>
                                            <div>
                                                <h1><a name="aanchor173"></a>
                                                    <MadCap:concept term="TypeScript" />JavaScript ES6</h1>
                                                <p>Some of the changes in JavaScript <code>EcmaScript6 </code>(ES6) are listed below. For more information on JavaScript ES6 refer to <a href="http://es6-features.org/"><span class="Hyperlink">http://es6-features.org/</span></a></p>
                                                <h2 class="Heading2">Modules</h2>
                                                <p>JavaScript is moving away from the global namespace and moving towards a modular organizational structure.</p>
                                                <p>Has a “main” entry point a la C# Console Application static main method.</p>
                                                <p>A JavaScript module is a JavaScript file. To consider a JavaScript file a module, it must export functionality. So, not all JavaScript files are modules.</p>
                                                <h3 class="Heading3">Modules – Export</h3>
                                                <p>Although a JS file is a module, none of the code within the module can be used unless they are exported. Thus, non-exported code is private to the module itself.</p>
                                                <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/PatternedRows.css');margin-left: 0;margin-right: auto;" class="TableStyle-PatternedRows" cellspacing="0">
                                                    <col class="TableStyle-PatternedRows-Column-Regular" style="width: 256px;" />
                                                    <col class="TableStyle-PatternedRows-Column-Regular" />
                                                    <thead>
                                                        <tr class="TableStyle-PatternedRows-Head-Header1">
                                                            <th class="TableStyle-PatternedRows-HeadE-Regular-Header1">
                                                                <p>What can be exported </p>
                                                            </th>
                                                            <th class="TableStyle-PatternedRows-HeadD-Regular-Header1">
                                                                <p>Note</p>
                                                            </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">Variables</td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                                                <p>export var num = 5;</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">Objects</td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">
                                                                <p>export { prop1: value1, prop2: value2, …propN: valueN };</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">Functions</td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                                                <p>export function functionName() { … }</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">Classes</td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">
                                                                <p>export class Square extends Shape { … }</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-LightRows">
                                                            <td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">Modules</td>
                                                            <td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">
                                                                <p>export * as Common from “common”</p>
                                                                <p>export { SDK } from “common”</p>
                                                            </td>
                                                        </tr>
                                                        <tr class="TableStyle-PatternedRows-Body-DarkerRows">
                                                            <td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">Default</td>
                                                            <td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">
                                                                <p>Only one default export can exist in a module; no name required.</p>
                                                                <p>Can be an export of any of the above types except modules.</p>
                                                                <p>Example: export default function() { }</p>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                                <h3 class="Heading3">Modules - Import</h3>
                                                <p>Modules can be imported in two ways, but Non-modules cannot be imported this way.</p>
                                                <ul style="list-style-type: circle;margin-left: 36pt;">
                                                    <li style="list-style-type: circle;" value="1">Importing the entire module wrapped by alias</li>
                                                </ul>
                                                <ul style="list-style-type: disc;margin-left: 54pt;">
                                                    <li style="list-style-type: disc;" value="1">import * as Common from “common”;</li>
                                                    <li style="list-style-type: disc;" value="2">Common.SDK.retrieveRecord();</li>
                                                </ul>
                                                <ul style="list-style-type: circle;margin-left: 36pt;">
                                                    <li style="list-style-type: circle;" value="1">Import parts of the module by module name</li>
                                                </ul>
                                                <ul style="list-style-type: disc;margin-left: 54pt;">
                                                    <li style="list-style-type: disc;" value="1">Import { SDK } from “common”;</li>
                                                    <li style="list-style-type: disc;" value="2">SDK.retrieveRecord();</li>
                                                </ul>
                                                <p>There is no need to include extension in the file path.</p>
                                                <h2 class="Heading2">Classes</h2>
                                                <p>Code is organized more like OOP languages like Java or C#.</p>
                                                <p>A Class-like syntax was added in ES6 to declare classes in JavaScript and allow class inheritance.</p>
                                                <p>This syntax facilitates readability, but JavaScript is still prototypical inheritance and more functional than OOP.</p>
                                                <p>Classes can have both static methods and properties and instance methods and properties.</p>
                                                <p>class Square extends Shape {</p>
                                                <p> sides = 4;</p>
                                                <p>constructor() {</p>
                                                <p>super();</p>
                                                <p>}</p>
                                                <p>}</p>
                                                <h3 class="Heading3">Arrow Functions</h3>
                                                <p>There is a new syntax for declaring functions, but it is not semantically the same. Scope and context are different. The term “this” refers to different things.</p>
                                                <ul style="list-style-type: circle;margin-left: 36pt;">
                                                    <li style="list-style-type: circle;" value="1">Before:</li>
                                                </ul>
                                                <ul style="list-style-type: disc;margin-left: 54pt;">
                                                    <li style="list-style-type: disc;" value="1">function() { }</li>
                                                    <li style="list-style-type: disc;" value="2">function(param1) { }</li>
                                                    <li style="list-style-type: disc;" value="3">function(param1, param2, …paramN) { }</li>
                                                    <li style="list-style-type: disc;" value="4">function(param1, param2, …paramN) { return expression; }</li>
                                                    <li style="list-style-type: disc;" value="5">Function(param1) { }</li>
                                                    <li style="list-style-type: disc;" value="6">“this” refers to the function itself</li>
                                                </ul>
                                                <ul style="list-style-type: circle;margin-left: 36pt;">
                                                    <li style="list-style-type: circle;" value="1">After:</li>
                                                </ul>
                                                <ul style="list-style-type: disc;margin-left: 54pt;">
                                                    <li style="list-style-type: disc;" value="1">() =&gt; { }</li>
                                                    <li style="list-style-type: disc;" value="2">param1 =&gt; { }</li>
                                                    <li style="list-style-type: disc;" value="3">(param1, param2, …paramN) =&gt; { }</li>
                                                    <li style="list-style-type: disc;" value="4">(param1, param2, …paramN) =&gt; expression;</li>
                                                    <li style="list-style-type: disc;" value="5">(param1, …rest) =&gt; { }</li>
                                                    <li style="list-style-type: disc;" value="6">“this” refers to the containing object or function</li>
                                                </ul>
                                                <h3 class="Heading3">Evolution of Asynchronous Code </h3>
                                                <p>1. - Callbacks (Archaic)</p>
                                                <p>SDK.retrieveRecord(“egcs_sg_clients”, id, client =&gt; {</p>
                                                <p>SDK.retrieveRecord(“accounts”, id, account =&gt; {</p>
                                                <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; // do stuff</p>
                                                <p>});</p>
                                                <p>});</p>
                                                <p>2. -Promises (Primitive)&#160;</p>
                                                <p>SDK.retrieveRecord(“egcs_sg_clients”, id)</p>
                                                <p>.then(client =&gt; { </p>
                                                <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; return SDK.retrieveRecord(“accounts”, id); </p>
                                                <p>})</p>
                                                <p>.then(account =&gt; { // do stuff });</p>
                                                <p>3.- Async/Await (Modern)</p>
                                                <p>var client&#160;&#160;&#160;&#160; = await SDK.retrieveRecord(“egcs_sg_clients”, id);</p>
                                                <p>var account = await SDK.retrieveRecord(“accounts”, id);</p>
                                                <p>// do stuff</p>
                                                <h3 class="Heading3">Variable Declaration</h3>
                                                <p>Now there are three ways to declare variables in JavaScript: var, let, and const.</p>
                                                <p>They each have their own characteristics:</p>
                                                <ul style="list-style-type: circle;margin-left: 36pt;">
                                                    <li value="1">- Promises (Primitive)</li>
                                                    <li style="list-style-type: circle;" value="2">var</li>
                                                </ul>
                                                <ul style="list-style-type: disc;margin-left: 54pt;">
                                                    <li style="list-style-type: disc;" value="1">Accessible within the function and are hoisted to the top.</li>
                                                </ul>
                                                <ul style="list-style-type: circle;margin-left: 36pt;">
                                                    <li style="list-style-type: circle;" value="1">let</li>
                                                </ul>
                                                <ul style="list-style-type: disc;margin-left: 54pt;">
                                                    <li style="list-style-type: disc;" value="1">Accessible within the brackets in which it was declared.</li>
                                                </ul>
                                                <ul style="list-style-type: circle;margin-left: 36pt;">
                                                    <li style="list-style-type: circle;" value="1">const</li>
                                                </ul>
                                                <ul style="list-style-type: disc;margin-left: 54pt;">
                                                    <li style="list-style-type: disc;" value="1">Same as let but read only; cannot be assigned after being declared.</li>
                                                </ul>
                                                <p><a class="MCHelpControl MCHelpControl-Concept conceptLink" data-mc-concepts="TypeScript" href="javascript:void(0);" data-mc-topics="Codebase organization|CodebaseOrganization.htm#aanchor312||Debugging|Debugging.htm#aanchor236||Framework (for TypeScript)|TypeScriptFramework.htm#aanchor319||JavaScript ES6|#aanchor173||TypeScript|TypeScript.htm#aanchor5"><span class="MCHelpControl-ConceptHotSpot_"><img class="MCHelpControl_Image_Icon" src="../../../Skins/Default/Stylesheets/Images/transparent.gif" height="16" width="16" alt="Concept Link Icon" />See Also</span></a>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>